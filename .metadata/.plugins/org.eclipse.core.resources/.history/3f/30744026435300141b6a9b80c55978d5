/**
 * 
 */

/**
 * @author Alexander Carson
 *
 */
public class Stack<T> 
{
	private int length = 0;
	private Node<T> top = null;
	
	private class Node<T> 
	{
		private T info = null;
		private Node<T> next = null;
	//	public Node() {}
		public Node(T T) {info = T;}
	}
	
	public Stack(){}
    public Stack(T T) 
    {
		top = new Node<T>(T);
		length = 1;
	}
    
	public void push(T T) 
	{
		Node<T> oldTop = top;
		top = new Node<T>(T);
		top.next = oldTop;
		length++;
	}
	
	public T pop()
	{
		if(length == 0) throw new RuntimeException("Stack underflow");
		T t = top.info;
		top = top.next;
		length--;
		return t;
	}
	
	public T top()
	{
		if(length == 0) throw new RuntimeException("Stack underflow");
		return top.info;
	}
}
